--- llvm-3.4/tools/clang/lib/Frontend/InitHeaderSearch.cpp.orig	2013-11-15 22:07:59.000000000 +0400
+++ llvm-3.4/tools/clang/lib/Frontend/InitHeaderSearch.cpp	2014-01-14 00:10:14.942098600 +0400
@@ -85,7 +85,7 @@
   /// AddMinGW64CXXPaths - Add the necessary paths to support
   /// libstdc++ of x86_64-w64-mingw32 aka mingw-w64.
   void AddMinGW64CXXPaths(StringRef Base,
-                          StringRef Version);
+                          const llvm::Triple &triple);
 
   // AddDefaultCIncludePaths - Add paths that should always be searched.
   void AddDefaultCIncludePaths(const llvm::Triple &triple,
@@ -209,16 +209,14 @@
 }
 
 void InitHeaderSearch::AddMinGW64CXXPaths(StringRef Base,
-                                          StringRef Version) {
-  // Assumes Base is HeaderSearchOpts' ResourceDir
-  AddPath(Base + "/../../../include/c++/" + Version,
-          CXXSystem, false);
-  AddPath(Base + "/../../../include/c++/" + Version + "/x86_64-w64-mingw32",
-          CXXSystem, false);
-  AddPath(Base + "/../../../include/c++/" + Version + "/i686-w64-mingw32",
-          CXXSystem, false);
-  AddPath(Base + "/../../../include/c++/" + Version + "/backward",
-          CXXSystem, false);
+                                          const llvm::Triple &triple) {
+  if ( triple.getArch() == llvm::Triple::x86_64 ) {
+    AddPath(Base + "/../../../x86_64-w64-mingw32/include/c++", CXXSystem, false);
+    AddPath(Base + "/../../../x86_64-w64-mingw32/include/c++/x86_64-w64-mingw32", CXXSystem, false);
+  } else {
+    AddPath(Base + "/../../../i686-w64-mingw32/include/c++", CXXSystem, false);
+    AddPath(Base + "/../../../i686-w64-mingw32/include/c++/i686-w64-mingw32", CXXSystem, false);
+  }
 }
 
 void InitHeaderSearch::AddDefaultCIncludePaths(const llvm::Triple &triple,
@@ -395,19 +393,11 @@
     break;
   case llvm::Triple::MinGW32:
     // mingw-w64 C++ include paths (i686-w64-mingw32 and x86_64-w64-mingw32)
-    AddMinGW64CXXPaths(HSOpts.ResourceDir, "4.5.0");
-    AddMinGW64CXXPaths(HSOpts.ResourceDir, "4.5.1");
-    AddMinGW64CXXPaths(HSOpts.ResourceDir, "4.5.2");
-    AddMinGW64CXXPaths(HSOpts.ResourceDir, "4.5.3");
-    AddMinGW64CXXPaths(HSOpts.ResourceDir, "4.5.4");
-    AddMinGW64CXXPaths(HSOpts.ResourceDir, "4.6.0");
-    AddMinGW64CXXPaths(HSOpts.ResourceDir, "4.6.1");
-    AddMinGW64CXXPaths(HSOpts.ResourceDir, "4.6.2");
-    AddMinGW64CXXPaths(HSOpts.ResourceDir, "4.6.3");
-    AddMinGW64CXXPaths(HSOpts.ResourceDir, "4.7.0");
+#if defined(__MINGW64_VERSION_MAJOR)
+	 AddMinGW64CXXPaths(HSOpts.ResourceDir, triple);
+#else
     // mingw.org C++ include paths
     AddMinGWCPlusPlusIncludePaths("/mingw/lib/gcc", "mingw32", "4.5.2"); //MSYS
-#if defined(_WIN32)
     AddMinGWCPlusPlusIncludePaths("c:/MinGW/lib/gcc", "mingw32", "4.8.1");
     AddMinGWCPlusPlusIncludePaths("c:/MinGW/lib/gcc", "mingw32", "4.6.2");
     AddMinGWCPlusPlusIncludePaths("c:/MinGW/lib/gcc", "mingw32", "4.6.1");
