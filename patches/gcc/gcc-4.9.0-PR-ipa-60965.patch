From 25807eb8c8bdc5e5fc3becaf79de5df549b25a9d Mon Sep 17 00:00:00 2001
From: hubicka <hubicka@138bc75d-0d04-0410-961f-82ee72b054a4>
Date: Mon, 5 May 2014 23:27:40 +0000
Subject: [PATCH] 	PR ipa/60965 	* ipa-devirt.c (get_class_context):
 Allow POD to change to non-POD. 	* g++.dg/ipa/devirt-32.C: New
 testcase.

git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/trunk@210086 138bc75d-0d04-0410-961f-82ee72b054a4
---
 gcc/ChangeLog                        |  5 +++++
 gcc/ipa-devirt.c                     | 11 +++++++++++
 gcc/testsuite/ChangeLog              |  5 +++++
 gcc/testsuite/g++.dg/ipa/devirt-32.C | 23 +++++++++++++++++++++++
 4 files changed, 44 insertions(+)
 create mode 100644 gcc/testsuite/g++.dg/ipa/devirt-32.C

diff --git a/gcc/ChangeLog b/gcc/ChangeLog
index 0a5bd03..41dee8f 100644
--- a/gcc/ChangeLog
+++ b/gcc/ChangeLog
@@ -1,3 +1,8 @@
+2014-05-05  Jan Hubicka  <hubicka@ucw.cz>
+
+	PR ipa/60965
+	* ipa-devirt.c (get_class_context): Allow POD to change to non-POD.
+
 2014-04-22  Release Manager
 
 	* GCC 4.9.0 released.
diff --git a/gcc/ipa-devirt.c b/gcc/ipa-devirt.c
index 4ff31fc..5cd4c83 100644
--- a/gcc/ipa-devirt.c
+++ b/gcc/ipa-devirt.c
@@ -987,6 +987,17 @@ give_up:
   context->outer_type = expected_type;
   context->offset = 0;
   context->maybe_derived_type = true;
+  context->maybe_in_construction = true;
+  /* POD can be changed to an instance of a polymorphic type by
+     placement new.  Here we play safe and assume that any
+     non-polymorphic type is POD.  */
+  if ((TREE_CODE (type) != RECORD_TYPE
+       || !TYPE_BINFO (type)
+       || !polymorphic_type_binfo_p (TYPE_BINFO (type)))
+      && (TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST
+	  || (offset + tree_to_uhwi (TYPE_SIZE (expected_type)) <=
+	      tree_to_uhwi (TYPE_SIZE (type)))))
+    return true;
   return false;
 }
 
diff --git a/gcc/testsuite/ChangeLog b/gcc/testsuite/ChangeLog
index 1c9d4d3..a3dd81c 100644
--- a/gcc/testsuite/ChangeLog
+++ b/gcc/testsuite/ChangeLog
@@ -1,3 +1,8 @@
+2014-05-05  Jan Hubicka  <hubicka@ucw.cz>
+
+	PR ipa/60965
+	* g++.dg/ipa/devirt-32.C: New testcase.
+
 2014-04-22  Release Manager
 
 	* GCC 4.9.0 released.
diff --git a/gcc/testsuite/g++.dg/ipa/devirt-32.C b/gcc/testsuite/g++.dg/ipa/devirt-32.C
new file mode 100644
index 0000000..64c44ba
--- /dev/null
+++ b/gcc/testsuite/g++.dg/ipa/devirt-32.C
@@ -0,0 +1,23 @@
+/* { dg-options "-O2 -std=c++11 -fdump-ipa-inline"  } */
+#include <new>
+
+class EmbeddedObject {
+public:
+  virtual int val() { return 2; }
+};
+
+class Container {
+  alignas(EmbeddedObject) char buffer[sizeof(EmbeddedObject)];
+public:
+  EmbeddedObject *obj() { return (EmbeddedObject*)buffer; }
+  Container() { new (buffer) EmbeddedObject(); }
+};
+
+Container o;
+
+int main()
+{
+  __builtin_printf("%d\n", o.obj()->val());
+}
+/* { dg-final { scan-ipa-dump-not "__builtin_unreachable"  "inline"  } } */
+/* { dg-final { cleanup-ipa-dump "inline" } } */
-- 
1.9.1
